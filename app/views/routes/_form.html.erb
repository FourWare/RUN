</br>

<div class="container" style="background-color: rgba(0,0,0,0.7); width: 90%;">
  <h2 style="text-align: center;">Crear ruta</h2>
  <hr>
  <%= form_with(model: route, local: true,:html => { :onsubmit => "return false;", :id => "route_form" }) do |form| %>
	  <% if route.errors.any? %>
      <div id="error_explanation">
        <h2><%= pluralize(route.errors.count, "error") %> Prohibido guardar la ruta.</h2>
        <ul>
          <% route.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>
  	<div class="row">
        <div class="col-md-6 personal-info">
          <h3>Información de la nueva ruta</h3>
          <br></br>
          <form class="form-horizontal" role="form">
            <div class="form-group">
              <div class="col-lg-12">
                <label class="col-lg-4 control-label">Título:</label>
                <div class="input-group col-lg-8">
                  <span class="input-group-addon glyphicon glyphicon-tags"></span>
                  <%= form.text_field :title, class: "form-control", id: :route_title, autofocus: true, type: 'text', required: "" %>
                </div>
                <br>
              </div>
            </div>
            <br></br>
            <div class="form-group">
              <div class="col-lg-12">
                <label class="col-lg-4 control-label">Descripción:</label>
                <div class="input-group col-lg-8">
                  <span class="input-group-addon glyphicon glyphicon-align-justify"></span>
                  <%= form.text_area :description, class: "form-control", id: :route_description, autofocus: true, type: 'text', style: "resize: none;", required: "" %>
                </div>
              </div>
            </div>
            <br></br>
            </br>
            <div class="form-group">
              <div class="col-lg-12">
                <label class="col-lg-4 control-label">Costo:</label>
                <div class="input-group col-lg-8">
                  <span class="input-group-addon glyphicon glyphicon-usd"></span>
                  <%= form.text_field :cost, class: "form-control", id: :route_cost, type: 'number', min: 100, step: 100, autofocus: true, required: "" %>
                </div>
              </div>
            </div>
            <br></br>
            <div class="form-group">
              <div class="col-lg-12">
                <label class="col-lg-4 control-label">Elige tu vehículo:</label>
                <div class="input-group col-lg-8">
                  <span class="input-group-addon glyphicon glyphicon-bed"></span>
                  <select name="route[car_placa]" id="carSelect" style="background-color: white; color: black; width: 100%; height: 30px; display: block; border-radius: 5px;"  required: "">
                    <option value=" " style="color: black;"></option>
                    <% @myCars.each do |car| %>
                      <option value=<%= car.placa %> style="color: black;"><%= car.placa %></option>
                    <% end %>
                  </select>
                </div>
              </div>
            </div>
            <br></br>
            <div class="form-group">
              <div class="col-lg-12">
                <label class="col-lg-4 control-label">Cupos disponibles:</label>
                <div class="input-group col-lg-8">
                  <span class="input-group-addon glyphicon glyphicon-user"></span>
                  <%= form.text_field :spaces_available, class: "form-control", id: :route_spaces_available, type: 'number', min: 1, step: 1, autofocus: true, required: "" %>
                </div>
              </div>
            </div>
            <br></br>
            <div class="form-group">
              <div class="col-sm-12">
                <label class="col-lg-4">Salida:</label>
                <div class="input-group col-lg-8">
                  <span class="input-group-addon glyphicon glyphicon-calendar"></span>
                  <%= form.text_field :departure, class: "form-control col-lg-8", id: :route_departure, type: 'datetime-local', autofocus: true, required: "" %>
                </div>
              </div>
            </div>
            <br></br>
            <div class="form-group">
              <div class="col-lg-12">
                <%= form.hidden_field :from_lat, class: "form-control", id: :route_from_lat, autofocus: true, required: "" %>
              </div>
            </div>
            <div class="form-group">
              <div class="col-lg-12">
                <%= form.hidden_field :from_lng, class: "form-control", id: :route_from_lng, autofocus: true, required: "" %>
              </div>
            </div>
            <div class="form-group">
              <div class="col-lg-12">
                <%= form.hidden_field :to_lat, class: "form-control", id: :route_to_lat, autofocus: true, required: "" %>
              </div>
            </div>
            <div class="form-group">
              <div class="col-lg-12">
                <%= form.hidden_field :to_lng, class: "form-control", id: :route_to_lng, autofocus: true, required: "" %>
              </div>
            </div>
            <div class="form-group">
              <div class="col-lg-12">
                <%= form.hidden_field :waypoints, class: "form-control", id: :route_waypoints, autofocus: true, required: "" %>
              </div>
            </div>
          </form>
        </div>
        
        <%= form.hidden_field :id_user, :value => current_user.id %>
        <%= form.hidden_field :users_in_route, :value => "" %>

        <div class="col-md-6 personal-info">
          <div class="col-lg-12" style="text-align: right;">
            <div class="input-group" style="width: 100%; margin: 0 auto; text-align: left">
              <span class="input-group-addon glyphicon glyphicon-globe"></span>
              <input type="text" class="form-control" name="address" id="address" placeholder="Buscar en el mapa...">
              <span class="input-group-btn">
                <button type="button" class="btn btn-default" id="geocode" onclick="geocodeAddress()" style="background: lightgreen;">Buscar</button>
              </span>
            </div>
          </div>
          <div id="wraper" >
            <div id="mapEventCreate" style='width: 550px; height: 400px;'></div>
          </div>
          <hr>
          <div class="form-group">
            <div class="col-lg-3">
            </div>
            <div class="col-lg-3">
              <%= link_to "/usuario/inicio" do %>
                <button type="button" id="submitRegister" class="btn btn-primary btn-lg" style="width: 100%;" onclick="getData();">Crear</button>
              <% end %>
            </div>
            <div class="col-lg-3">
              <%= link_to "/usuario/inicio" do %>
                <button type="button" id="submitRegister" class="btn btn-primary btn-lg" style="width: 100%;" display="inline-block">Cancelar</button>
              <% end %>
            </div>
            <div class="col-lg-3">
            </div>
          </div>
        </div>
      </div>
  <% end %>
</div>

<script type="text/javascript">

var mapStyle = [
    {
        "featureType": "all",
        "elementType": "labels",
        "stylers": [
            {
                "visibility": "on"
            }
        ]
    },
    {
        "featureType": "administrative",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "on"
            }
        ]
    },
    {
        "featureType": "administrative",
        "elementType": "geometry",
        "stylers": [
            {
                "visibility": "on"
            }
        ]
    },
    {
        "featureType": "administrative",
        "elementType": "geometry.fill",
        "stylers": [
            {
                "color": "#d6e2e6"
            }
        ]
    },
    {
        "featureType": "administrative",
        "elementType": "geometry.stroke",
        "stylers": [
            {
                "color": "#cfd4d5"
            }
        ]
    },
    {
        "featureType": "administrative",
        "elementType": "labels.text.fill",
        "stylers": [
            {
                "color": "#7492a8"
            }
        ]
    },
    {
        "featureType": "administrative.neighborhood",
        "elementType": "labels.text.fill",
        "stylers": [
            {
                "lightness": 25
            }
        ]
    },
    {
        "featureType": "landscape",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "on"
            }
        ]
    },
    {
        "featureType": "landscape.man_made",
        "elementType": "geometry.fill",
        "stylers": [
            {
                "color": "#dde2e3"
            }
        ]
    },
    {
        "featureType": "landscape.man_made",
        "elementType": "geometry.stroke",
        "stylers": [
            {
                "color": "#cfd4d5"
            }
        ]
    },
    {
        "featureType": "landscape.natural",
        "elementType": "geometry.fill",
        "stylers": [
            {
                "color": "#dde2e3"
            }
        ]
    },
    {
        "featureType": "landscape.natural",
        "elementType": "labels.text.fill",
        "stylers": [
            {
                "color": "#7492a8"
            }
        ]
    },
    {
        "featureType": "landscape.natural.terrain",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "poi",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "on"
            }
        ]
    },
    {
        "featureType": "poi",
        "elementType": "geometry.fill",
        "stylers": [
            {
                "color": "#dde2e3"
            }
        ]
    },
    {
        "featureType": "poi",
        "elementType": "labels.text.fill",
        "stylers": [
            {
                "color": "#588ca4"
            }
        ]
    },
    {
        "featureType": "poi",
        "elementType": "labels.icon",
        "stylers": [
            {
                "saturation": -100
            }
        ]
    },
    {
        "featureType": "poi.park",
        "elementType": "geometry.fill",
        "stylers": [
            {
                "color": "#a9de83"
            }
        ]
    },
    {
        "featureType": "poi.park",
        "elementType": "geometry.stroke",
        "stylers": [
            {
                "color": "#bae6a1"
            }
        ]
    },
    {
        "featureType": "poi.sports_complex",
        "elementType": "geometry.fill",
        "stylers": [
            {
                "color": "#c6e8b3"
            }
        ]
    },
    {
        "featureType": "poi.sports_complex",
        "elementType": "geometry.stroke",
        "stylers": [
            {
                "color": "#bae6a1"
            }
        ]
    },
    {
        "featureType": "road",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "on"
            }
        ]
    },
    {
        "featureType": "road",
        "elementType": "labels.text.fill",
        "stylers": [
            {
                "color": "#41626b"
            }
        ]
    },
    {
        "featureType": "road",
        "elementType": "labels.icon",
        "stylers": [
            {
                "saturation": -45
            },
            {
                "lightness": 10
            },
            {
                "visibility": "on"
            }
        ]
    },
    {
        "featureType": "road.highway",
        "elementType": "geometry.fill",
        "stylers": [
            {
                "color": "#c1d1d6"
            }
        ]
    },
    {
        "featureType": "road.highway",
        "elementType": "geometry.stroke",
        "stylers": [
            {
                "color": "#a6b5bb"
            }
        ]
    },
    {
        "featureType": "road.highway",
        "elementType": "labels.icon",
        "stylers": [
            {
                "visibility": "on"
            }
        ]
    },
    {
        "featureType": "road.highway.controlled_access",
        "elementType": "geometry.fill",
        "stylers": [
            {
                "color": "#9fb6bd"
            }
        ]
    },
    {
        "featureType": "road.arterial",
        "elementType": "geometry.fill",
        "stylers": [
            {
                "color": "#ffffff"
            }
        ]
    },
    {
        "featureType": "road.local",
        "elementType": "geometry.fill",
        "stylers": [
            {
                "color": "#ffffff"
            }
        ]
    },
    {
        "featureType": "transit",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "on"
            }
        ]
    },
    {
        "featureType": "transit",
        "elementType": "labels.icon",
        "stylers": [
            {
                "saturation": -70
            }
        ]
    },
    {
        "featureType": "transit.line",
        "elementType": "geometry.fill",
        "stylers": [
            {
                "color": "#b4cbd4"
            }
        ]
    },
    {
        "featureType": "transit.line",
        "elementType": "labels.text.fill",
        "stylers": [
            {
                "color": "#588ca4"
            }
        ]
    },
    {
        "featureType": "transit.station",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "transit.station",
        "elementType": "labels.text.fill",
        "stylers": [
            {
                "color": "#008cb5"
            },
            {
                "visibility": "on"
            }
        ]
    },
    {
        "featureType": "transit.station.airport",
        "elementType": "geometry.fill",
        "stylers": [
            {
                "saturation": -100
            },
            {
                "lightness": -5
            }
        ]
    },
    {
        "featureType": "water",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "on"
            }
        ]
    },
    {
        "featureType": "water",
        "elementType": "geometry.fill",
        "stylers": [
            {
                "color": "#a6cbe3"
            }
        ]
    }
]

var directionsDisplay = new google.maps.DirectionsRenderer({draggable: true});
var directionsService = new google.maps.DirectionsService();
var geocoder = new google.maps.Geocoder();
var from_lat = "";
var from_lng = "";
var to_lat = "";
var to_lng = "";
var waypoints = [];
function calcRoute() {
  var origin    = markers[0].getPosition();
  var destination = markers[1].getPosition();
  var request = {
      origin:      origin,
      destination: destination,
      travelMode:  google.maps.TravelMode.DRIVING
  };
    directionsService.route(request, function(response, status) {
    if (status == google.maps.DirectionsStatus.OK) {
      directionsDisplay.setDirections(response);
      directionsDisplay.setMap(handler.getMap());
    }
  });
  markers[1].setMap(null);
  markers[0].setMap(null);
}

var markers = [];
handler = Gmaps.build('Google');
handler.buildMap({ internal: {id: 'mapEventCreate'}, 
  provider : {
    zoom: 15,
    center: new google.maps.LatLng(4.635540,-74.082807),
    mapTypeId: google.maps.MapTypeId.ROADMAP,
    styles: mapStyle
  }
  });
  
  var myMap =handler.getMap();
  
  google.maps.event.addListener(handler.getMap(), 'click', function(event) {
    if(markers.length < 2){
  placeMarker(event.latLng);
    }
});
directionsDisplay.addListener(directionsDisplay, 'directions_changed', function() {
        computeTotalDistance(directionsDisplay.getDirections());
      });
      
var delMarker = function (markerPar) {
    removeMarker(markerPar);
}

function placeMarker(location) {
    var marker = new google.maps.Marker({
        position: location, 
        map: handler.getMap(),
        draggable: true
    });
    markers.push(marker);
    if (markers.length == 2){
      calcRoute();
    }
    google.maps.event.addListener(marker, 'click', function(event) {
      marker.setMap(null);
      var i = markers.indexOf(marker);
      if(i != -1) {
	      markers.splice(i, 1);
      }
    });
}

function getData(){

  from_lat = directionsDisplay.getDirections().routes[0].legs[0].start_location.lat();
  from_lng = directionsDisplay.getDirections().routes[0].legs[0].start_location.lng();
  to_lat = directionsDisplay.getDirections().routes[0].legs[0].end_location.lat();
  to_lng = directionsDisplay.getDirections().routes[0].legs[0].end_location.lng();
  waypoints = directionsDisplay.getDirections().routes[0].legs[0].via_waypoints;
  
  var waypnts = []

for (i = 0; i < waypoints.length; i++) { 
    waypnts.push(  {
      id: i,
      lat: waypoints[i].lat(),
      lng: waypoints[i].lng()
      });
  }
var myJSON = JSON.stringify(waypnts);

  document.getElementById("route_from_lat").value = from_lat;
  document.getElementById("route_from_lng").value = from_lng;
  document.getElementById("route_to_lat").value = to_lat;
  document.getElementById("route_to_lng").value = to_lng;
  document.getElementById("route_waypoints").value = myJSON;
  document.getElementById("route_form").submit();
}

function geocodeAddress() {
        var address = document.getElementById('address').value;
        geocoder.geocode({'address': address}, function(results, status) {
          if (status === 'OK') {
            myMap.setCenter(results[0].geometry.location);
          } else {
            alert('Geocode was not successful for the following reason: ' + status);
          }
        });
      }
</script>